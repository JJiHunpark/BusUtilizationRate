Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor$Fare <- as.numeric(as.character(Subway_Factor$Fare))
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
Subway_Factor
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
# 요소들을 숫자로 변환
Subway_Factor$Fare <- as.numeric(as.character(Subway_Factor$Fare))
Subway_Factor
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
Subway_Factor
용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor
# 요소들을 숫자로 변환
Subway_Factor$Fare <- as.numeric(as.character(Subway_Factor$Fare))
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
Subway_Factor
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor$Fare <- as.integer(as.character(Subway_Factor$Fare))
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
Subway_Factor
sss <- read.csv("Subway_Utilization_Factor.csv", sep=",", header=T)
str(sss)
sss <- read.csv("Subway_Utilization_Factor.csv", sep=",", header=T)
str(sss)
sss
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
# 요소들을 숫자로 변환
Subway_Factor$Fare <- as.integer(Subway_Factor$Fare)
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
Subway_Factor
# 요소들을 숫자로 변환
Subway_Factor$Fare <- as.integer(as.character(Subway_Factor$Fare))
Subway_Factor
############################################################################
# 지하철 이용률 요인 분석
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor$Fare <- as.integer(as.character(Subway_Factor$Fare))
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
str(Subway_Factor)
###########################
# 지하철 이용률 요인 분석
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor$Fare <- gsub(",",Subway_Factor$Fare)
Subway_Factor <- gsub(",",Subway_Factor)
Subway_Factor <- gsub(",","",Subway_Factor)
Subway_Factor
Subway_Factor
############################################################################
# 지하철 이용률 요인 분석
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor
Subway_Factor[,3] <- as.integer(gsub(",", "", Subway_Factor[,3]))
str(Subway_Factor)
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
str(Subway_Factor)
Subway_Factor
# 변수의 단위 표준화 작업
Subway_Factor_scale <- transform(Subway_Factor,
Subway = scale(Subway),
Fare = scale(Fare),
Congested = scale(Congested),
PM10 = scale(PM10),
CO2 = scale(CO2),
Elevator = scale(Elevator),
Escalator = scale(Escalator)
)
Subway_Factor_scale <- Subway_Factor_scale[,-c(1)] # 회기분석에 불필요한 기간 column은 제거
Subway_Factor_scale
pairs.panels(Subway_Factor_scale[c("Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator")])
pairs.panels(Subway_Factor_scale[c("Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator")])
# 지하철 이용률 요인 분석
# 지하철 요금, 편의시설, 공기질, 혼잡도가 지하철 이용에 영향을 미치는지 확인
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Yaer", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor
Subway_Factor[,3] <- as.integer(gsub(",", "", Subway_Factor[,3]))  # 천 단위 요금에 , 가 들어가므로 , 를 공백으로 변환
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
# 변수의 단위 표준화 작업
Subway_Factor_scale <- transform(Subway_Factor,
Subway = scale(Subway),
Fare = scale(Fare),
Congested = scale(Congested),
PM10 = scale(PM10),
CO2 = scale(CO2),
Elevator = scale(Elevator),
Escalator = scale(Escalator)
)
Subway_Factor_scale <- Subway_Factor_scale[,-c(1)] # 회기분석에 불필요한 기간 column은 제거
Subway_Factor_scale
pairs.panels(Subway_Factor_scale[c("Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator")])
pairs.panels(Subway_Factor_scale[c("Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator")])
################################################################################
# 변수 선택 모형
fit <- lm(Subway ~ ., data=Subway_Factor_scale)
summary(fit)
################################################################################
# 변수 선택 모형
fit <- lm(Subway ~ ., data=Subway_Factor)
summary(fit)
################################################################################
# 변수 선택 모형
fit <- lm(Subway ~ ., data=Subway_Factor_scale)
summary(fit)
###############################################################################
# 지하철 이용률과 요금, 엘리베이터, 에스컬레이터 수와의 관계 (양의 관계)
Subway_Factor
Subway_plus <- Subway_Factor
Subway_plus
Subway_plus <- Subway_plus[,c(1,2,3,7,8)]
Subway_plus
Subway_plus_scale <- transform(Subway_plus,
Subway = scale(Subway),
Fare = scale(Fare),
Elevator = scale(Elevator),
Escalator = scale(Escalator)
)
Subway_plus_scale
ggplot(Subway_plus_scale, aes(x=Year, y=Subway)) +
xlab('YEAR') +
ylab('RATE') +
geom_line(colour="red") + # 지하철 이용률
geom_line(aes(x=Year,y=Fare),colour="Orange") +  # 지하철 요금
geom_line(aes(x=Year,y=Elevator),colour="Green") +  # 지하철 엘리베이터 수
geom_line(aes(x=Year,y=Escalator),colour="blue") +  # 지하철 에스컬레이터 수
geom_point(size=2, shape=19, colour="red") +
geom_point(aes(x=Year,y=Fare),colour="Orange") +
geom_point(aes(x=Year,y=Elevator),colour="Green") +
geom_point(aes(x=Year,y=Escalator),colour="blue") +  # 지하철 에스컬레이터 수
theme_bw() +
scale_x_continuous(breaks = c(2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016))+ ggtitle("Factors related to the amount of subway utilization") +
theme(plot.title = element_text(hjust = 0.5))
Subway_plus_scale
colnames(Subway_Factor) = c("Year", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor <- Transport_Average[,c(1,6)] # 지하철 요소에 지하철 이용 인원 추가
Fare <- read.csv("Fare.csv", sep=",", header=T)
Fare <- Fare[,c(1,7)] # 필요한 열 추출
Fare <- Fare[-c(1:4),] # 필요한 행 추출
names(Fare)[names(Fare) == "대중교통요금.4"] <- c("요금")
Subway_Factor <- cbind(Subway_Factor, Fare$요금) # 지하철 요소에 지하철 요금 추가
congested <- read.csv("congested.csv", sep=",", header=T)
congested <- congested[-c(1,2),c(1,4)] # 필요한 행, 열 추출
congested <- congested[c(order(congested$기간)),]
congested <- congested[-c(1:5),]
Subway_Factor <- cbind(Subway_Factor, congested$지하철혼잡도.1) # 지하철 요소에 지하철 혼잡도 추가
Airquality <- read.csv("Airquality_year.csv", sep=",", header=T)
Airquality <- Airquality[,c(1,3,4)]
Airquality <- Airquality[-c(1,2,3),]
Airquality <- Airquality[c(order(Airquality$년도)),]
names(Airquality)[names(Airquality) == "유지기준"] <- c("PM10")
names(Airquality)[names(Airquality) == "유지기준.1"] <- c("CO2")
Subway_Factor <- cbind(Subway_Factor, Airquality$PM10, Airquality$CO2) # 지하철 요소에 지하철 공기질 추가
Elevator <- read.csv("Elevator.csv", sep=",", header=T)
Elevator <- Elevator[Elevator$구분=="서울메트로" & Elevator$구분.1=="소계",] # 서울시 지하철에 관련된 데이터만 추출
Elevator <- Elevator[,c(1,6,8)]
Elevator <- Elevator[c(order(Elevator$기간)),]
Elevator <- Elevator[-c(1),]
Elevator
Subway_Factor <- cbind(Subway_Factor, Elevator$엘레베이터.1, Elevator$에스컬레이터.1) # 지하철 요소에 지하철 편의시설 추가
colnames(Subway_Factor) = c("Year", "Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator") # 테이블 열 이름 변경
Subway_Factor
str(Subway_Factor)
Subway_Factor[,3] <- as.integer(gsub(",", "", Subway_Factor[,3]))  # 천 단위 요금에 , 가 들어가므로 , 를 공백으로 변환
Subway_Factor$Congested <- as.numeric(as.character(Subway_Factor$Congested))
Subway_Factor$PM10 <- as.numeric(as.character(Subway_Factor$PM10))
Subway_Factor$CO2 <- as.numeric(as.character(Subway_Factor$CO2))
Subway_Factor$Elevator <- as.numeric(as.character(Subway_Factor$Elevator))
Subway_Factor$Escalator <- as.numeric(as.character(Subway_Factor$Escalator))
# 변수의 단위 표준화 작업
Subway_Factor_scale <- transform(Subway_Factor,
Subway = scale(Subway),
Fare = scale(Fare),
Congested = scale(Congested),
PM10 = scale(PM10),
CO2 = scale(CO2),
Elevator = scale(Elevator),
Escalator = scale(Escalator)
)
Subway_Factor_scale <- Subway_Factor_scale[,-c(1)] # 회기분석에 불필요한 기간 column은 제거
Subway_Factor_scale
pairs.panels(Subway_Factor_scale[c("Subway", "Fare", "Congested", "PM10", "CO2", "Elevator", "Escalator")])
################################################################################
# 변수 선택 모형
fit <- lm(Subway ~ ., data=Subway_Factor_scale)
summary(fit)
###############################################################################
# 지하철 이용률과 요금, 엘리베이터, 에스컬레이터 수와의 관계 (양의 관계)
Subway_Factor
Subway_plus <- Subway_Factor
Subway_plus <- Subway_plus[,c(1,2,3,7,8)]
Subway_plus
Subway_plus_scale <- transform(Subway_plus,
Subway = scale(Subway),
Fare = scale(Fare),
Elevator = scale(Elevator),
Escalator = scale(Escalator)
)
Subway_plus_scale
ggplot(Subway_plus_scale, aes(x=Year, y=Subway)) +
xlab('YEAR') +
ylab('RATE') +
geom_line(colour="red") + # 지하철 이용률
geom_line(aes(x=Year,y=Fare),colour="Orange") +  # 지하철 요금
geom_line(aes(x=Year,y=Elevator),colour="Green") +  # 지하철 엘리베이터 수
geom_line(aes(x=Year,y=Escalator),colour="blue") +  # 지하철 에스컬레이터 수
geom_point(size=2, shape=19, colour="red") +
geom_point(aes(x=Year,y=Fare),colour="Orange") +
geom_point(aes(x=Year,y=Elevator),colour="Green") +
geom_point(aes(x=Year,y=Escalator),colour="blue") +  # 지하철 에스컬레이터 수
theme_bw() +
scale_x_continuous(breaks = c(2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016))+ ggtitle("Factors related to the amount of subway utilization") +
theme(plot.title = element_text(hjust = 0.5))
# 지하철 이용률과 혼잡도, 미세먼지농도와의 관계 (음의 관계)
Subway_minus <- Subway_Factor
Subway_minus <- Subway_minus[,c(1,2,4,5)]
Subway_minus
Subway_minus_scale <- transform(Subway_minus,
Subway = scale(Subway),
Congested = scale(Congested),
PM10 = scale(PM10)
)
ggplot(Subway_minus_scale, aes(x=Year, y=Subway)) +
xlab('YEAR') +
ylab('RATE') +
geom_line(colour="red") + # 지하철 이용률
geom_line(aes(x=Year,y=Congested),colour="Orange") +  # 혼잡도
geom_line(aes(x=Year,y=PM10),colour="Green") +  # 미세먼지
geom_point(size=2, shape=19, colour="red") +
geom_point(aes(x=Year,y=Congested),colour="Orange") +
geom_point(aes(x=Year,y=PM10),colour="Green") +
theme_bw() +
scale_x_continuous(breaks = c(2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016))+ ggtitle("Factors unrelated to the amount of subway utilization") +
theme(plot.title = element_text(hjust = 0.5))
###############################################################################
# 지하철 이용률과 요금, 엘리베이터, 에스컬레이터 수와의 관계 (양의 관계)
Subway_Factor
Subway_plus <- Subway_Factor
Subway_plus
Subway_plus <- Subway_plus[,c(1,2,3,7,8)]
Subway_plus
# 지하철 이용률과 혼잡도, 미세먼지농도와의 관계 (음의 관계)
Subway_minus <- Subway_Factor
Subway_minus <- Subway_minus[,c(1,2,4,5)]
Subway_minus
